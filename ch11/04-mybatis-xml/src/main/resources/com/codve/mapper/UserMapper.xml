<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.codve.mapper.UserMapper">
    <resultMap id="userMap" type="User">
        <id column="user_id" property="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
        <result column="user_name" property="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="user_birthday" property="birthday" javaType="java.lang.Long" jdbcType="BIGINT"/>
    </resultMap>
    
    <insert id="insert" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        insert into `user`(`user_name`, `user_birthday`) values (#{name}, #{birthday})
    </insert>

    <insert id="insertAfter" parameterType="User">
        insert into `user`(`user_name`, `user_birthday`) values (#{name}, #{birthday})
        <selectKey keyColumn="user_id" keyProperty="id" order="AFTER" resultType="long">
            select last_insert_id();
        </selectKey>
    </insert>

    <select id="findById" parameterType="long"
            resultMap="userMap">
        select `user_id`, `user_name`, `user_birthday` from `user` where `user_id` = #{userId}
    </select>

    <select id="findAll" resultMap="userMap">
        select `user_id`, `user_name`, `user_birthday` from `user`
    </select>

    <select id="count" resultType="long">
        select count(*) from `user`;
    </select>

    <select id="findByParams" resultMap="userMap">
        select * from `user` where `user_name` like #{name} and `user_birthday` >= #{birthday}
    </select>

    <update id="update" parameterType="User">
        update `user` set `user_name` = #{name}, `user_birthday` = #{birthday} where `user_id` = #{id}
    </update>

    <delete id="delete" parameterType="Long">
        delete from `user` where `user_id` = #{userId}
    </delete>

</mapper>